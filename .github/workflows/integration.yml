name: Integration
on:
  push:
jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt install unzip
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: foundryvtt-hotspots
      - run: mkdir foundryvtt foundrydata
      - run: ls && pwd
      - name: Install FoundryVTT
        shell: bash
        env:
          FOUNDRY_USERNAME: ${{ secrets.FOUNDRY_USERNAME }}
          FOUNDRY_PASSWORD: ${{ secrets.FOUNDRY_PASSWORD }}
        run: |
          # Get csrf prereqs
          homepage=$(curl -is "https://foundryvtt.com")
          middleware=$(echo "$homepage" | grep -m 1 'csrfmiddlewaretoken' | sed 's/^.*value="\([^"]*\).*$/\1/')
          csrftoken=$(echo "$homepage" | grep 'Set-Cookie' | sed 's/^.*csrftoken=\([^;]*\).*$/\1/')

          # Fetch session and username from auth credentials
          login_page=$(curl -is 'https://foundryvtt.com/auth/login/' -H "Referer: https://foundryvtt.com/" -H "Cookie: csrftoken=$csrftoken" --data-raw "csrfmiddlewaretoken=$middleware&login_username=$FOUNDRY_USERNAME&login_password=$FOUNDRY_PASSWORD&login_redirect=%2F")
          sessionid=$(echo "$login_page" | grep 'Set-Cookie: sessionid' | sed 's/^.*sessionid=\([^;]*\).*$/\1/')
          username=$(echo "$login_page" | grep 'You are now logged in as' | sed 's/^.*You are now logged in as \([^!]*\).*$/\1/')

          # Fetch license and latest version
          userpage=$(curl -is "https://foundryvtt.com/community/$username/licenses" -H "Cookie: sessionid=$sessionid")
          license=$(echo "$userpage" | grep 'license-key' | sed 's/^.*<code>\([^<]*\).*$/\1/')
          version_path=$(echo "$userpage" | grep 'Download Node.js Application' | sed 's/^.*href="\([^"]*\).*$/\1/')

          # Download latest version using sessionid
          curl -sL "https://foundryvtt.com$version_path" -H "Cookie: sessionid=$sessionid" > foundryvtt/foundryvtt.zip

          # Unzip and run
          cd foundryvtt
          unzip -qq foundryvtt.zip
          node resources/app/main.js --dataPath=$GITHUB_WORKSPACE/foundrydata &
          FOUNDRY_PID=$!
          timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:30000)" != "302" ]]; do sleep 2; done' || false

          # Enter license, accept EULA
          curl -is "localhost:30000/license" --data "action=enterKey&licenseKey=$license"
          curl -is "localhost:30000/license" --data "agree=on&accept="

          # Change the port and restart the server
          sed -i 's/"port": [0-9]*/"port": 60119/' $GITHUB_WORKSPACE/foundrydata/Config/options.json
          kill $FOUNDRY_PID

      - name: Run integration suite
        working-directory: foundryvtt-hotspots
        run: |
          # Spin up the application
          (cd $GITHUB_WORKSPACE/foundryvtt && node resources/app/main.js --dataPath=$GITHUB_WORKSPACE/foundrydata &)
          timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:60119)" != "302" ]]; do sleep 2; done' || false

          # Install dependencies and run integration suite
          npm i
          FOUNDRY_URL='http://localhost:60199' npm run test:integration
